# Azure Pipelines CI job template for PyDM Tests
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/anaconda?view=azure-devops
parameters:
  name: ''
  vmImage: ''

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      Python27-Qt4:
        python.version: '2.7'
        python.distribution: "conda"
        qt.bindings: "pyqt=4"
      Python27-PySide:
        python.version: '2.7'
        qt.bindings: "pyside"
        python.distribution: "conda"
      Python37-PyQt-5.9:
        python.version: "3.7"
        qt.bindings: "pyqt"
        python.distribution: "conda"
      Python37-PySide2-5.6:
        python.version: "3.7"
        qt.bindings: "pyside2"
        python.distribution: "conda"
      Python37-PyQt-5.12:
        python.version: '3.7'
        qt.bindings: "PyQt5"
        python.distribution: "system"
      Python37-PySide2-5.12:
        python.version: "3.7"
        qt.bindings: "PySide2"
        python.distribution: "system"

  steps:
  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: 'Windows - Add conda to PATH'
    condition: and(eq(variables['python.distribution'], 'conda' ), eq(variables['agent.os'], 'Windows_NT' ))

  - bash: |
      echo "##vso[task.prependpath]$CONDA/bin"
      sudo chown -R $USER $CONDA
      # sudo install -d -m 0777 /usr/local/miniconda/envs
    displayName: 'MacOS - Add conda to PATH'
    condition: and(eq(variables['python.distribution'], 'conda' ), eq(variables['agent.os'], 'Darwin' ))

  - bash: |
      echo "##vso[task.prependpath]/usr/share/miniconda/bin"
      # Fix Anaconda permissions
      # sudo install -d -m 0777 /usr/share/miniconda/
      # sudo install -d -m 0777 /usr/share/miniconda/envs
    displayName: 'Linux - Add conda to PATH'
    condition: and(eq(variables['python.distribution'], 'conda' ), eq(variables['agent.os'], 'Linux' ))

  - bash: |
      # Install & Start Windows Manager for Linux
      sudo apt-get install -y xvfb herbstluftwm
      sudo /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1024x768x24 -ac +extension GLX +render -noreset
      sleep 3

    displayName: 'Linux - Prepare OS'
    condition: eq(variables['agent.os'], 'Linux' )

  # Linux
  - bash: |
      sudo /sbin/start-stop-daemon --start --pidfile /tmp/custom_herbstluftwm_99.pid --make-pidfile --background --exec /usr/bin/herbstluftwm
      sleep 1
    env:
      DISPLAY: :99.0
    displayName: 'Linux - Start herbstluftwm'
    condition: eq(variables['agent.os'], 'Linux' )

  - bash: |
      source $HOME/miniconda/etc/profile.d/conda.sh
      hash -r
      conda config --set always_yes yes --set auto_update_conda no
      conda config --add channels conda-forge
      conda create -n test_env --quiet python=$(python.version) 
    displayName: 'Conda - Setup Test Environment'
    condition: eq(variables['python.distribution'], 'conda' )
  
  - script: |
      call activate test_env
      conda install --quiet $(qt.bindings)
      conda install --quiet numpy scipy pyopengl pytest flake8 six coverage
      pip install pytest-azurepipelines pytest-xdist pytest-cov
    displayName: Conda Install Dependencies - Windows
    condition: and(eq(variables['python.distribution'], 'conda' ), eq(variables['agent.os'], 'Windows_NT' ))

  - bash: |
      source activate test_env
      conda install --quiet $(qt.bindings)
      conda install --quiet numpy scipy pyopengl pytest flake8 six coverage
      pip install pytest-azurepipelines pytest-xdist pytest-cov
    displayName: Conda Install Dependencies - MacOS/Linux
    condition: and(eq(variables['python.distribution'], 'conda' ), ne(variables['agent.os'], 'Windows_NT' ))

  - bash: |
      pip install setuptools wheel
      pip install $(qt.bindings)
      pip install numpy scipy pyopengl pytest flake8 six coverage
      pip install pytest-azurepipelines pytest-xdist pytest-cov
    displayName: "Pip - Install Dependencies"
    condition: eq(variables['python.distribution'], 'system' )


  # Windows Only
  # - powershell: |
  #     $MyProcess = Start-Process $Env:REPEATER -PassThru
  #   env:
  #     REPEATER: $(CONDA_PREFIX)\Lib\site-packages\epics\clibs\win64\caRepeater.exe
  #   displayName: 'Windows - Start CaRepeater'
  #   condition: and(eq(variables['python.distribution'], 'conda' ), eq(variables['agent.os'], 'Windows_NT' ))

  - bash: |
      source activate test_env
      echo python location: `which python`
      echo pytest location: `which pytest`
      echo installed packages:  `pip list`
      echo pyqtgraph system info: `python -c "import pyqtgraph as pg; pg.systemInfo()"`
    displayName: 'Debug'
    continueOnError: false
    condition: and(eq(variables['python.distribution'], 'conda' ), ne(variables['agent.os'], 'Windows_NT' ))

  - bash: |
      call activate test_env
      echo python location: `which python`
      echo pytest location: `which pytest`
      echo installed packages:  `pip list`
      echo pyqtgraph system info: `python -c "import pyqtgraph as pg; pg.systemInfo()"`
    displayName: 'Debug'
    continueOnError: false
    condition: and(eq(variables['python.distribution'], 'conda' ), eq(variables['agent.os'], 'Windows_NT' ))

  - bash: |
      echo python location: `which python`
      echo pytest location: `which pytest`
      echo installed packages:  `pip list`
      echo pyqtgraph system info: `python -c "import pyqtgraph as pg; pg.systemInfo()"`
    displayName: 'Debug'
    continueOnError: false
    condition: eq(variables['python.distribution'], 'system' )

  - bash: pytest --cov pyqtgraph -sv;
    displayName: 'Tests - Run'
    continueOnError: false
    env:
      DISPLAY: :99.0
    condition: eq(variables['python.distribution'], 'system' )

  - bash: |
      source activate test_env
      pytest --cov pyqtgraph -sv;
    displayName: 'Tests - Run'
    continueOnError: false
    env:
      DISPLAY: :99.0
    condition: and(eq(variables['python.distribution'], 'conda' ), ne(variables['agent.os'], 'Windows_NT' ))

  - bash: |
      call activate test_env
      pytest --cov pyqtgraph -sv;
    displayName: 'Tests - Run'
    continueOnError: false
    env:
      DISPLAY: :99.0
    condition: and(eq(variables['python.distribution'], 'conda' ), eq(variables['agent.os'], 'Windows_NT' ))
